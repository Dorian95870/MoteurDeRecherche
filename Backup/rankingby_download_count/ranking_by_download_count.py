# -*- coding: utf-8 -*-
"""ranking by download_count.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kziVydmx93iLDR9zFtNB8o7O8cxfXqAU
"""

import requests, json, math # Permet d'effectuer des requêtes, permet la conversion de String -> dict/list
import pandas as pd # Affichage des données sous forme de tableaux
import matplotlib.pyplot as plt
import numpy as np

"""getdataset"""

URL = "http://gutendex.com/books"
full_data = list()

NBDOCS = 1000

def getNbRequests(nbDocs):
  return math.ceil(nbDocs/32)

for i in range(getNbRequests(NBDOCS)):
  temp_data = requests.get(URL+'?page={}'.format(i+1)).json()
  temp_data = temp_data['results']
  full_data += temp_data
  print('-Page loaded {}/{}'.format(i+1, getNbRequests(NBDOCS)))

print('\n{} documents chargé(s)'.format(len(full_data)))

data = pd.DataFrame(full_data)
data.head()

def getBooksByListOfIds(ids: list()):
  books = list()
  for i in range(len(ids)):
    books.append(data.loc[data['id'] == ids[i]])
  return books

"""index"""

root = 'title'

dataIndex = dict()

for i in range(len(data[root])):
  docId = data['id'][i]
  words = data[root][i].split(' ')
  for y in range(len(words)):
    word = words[y].lower()
    try:
      dataIndex[word].append(docId)
    except:
      dataIndex[word] = list()
      dataIndex[word].append(docId)

dataIndex

"""filtre"""

request = input('Quelle est votre requete ?\n')

def filterByRequest(request :str):
  #Definir nos règles de Filtrage
  docs = list()
  words = request.lower().split(' ')
  for i in range(len(words)):
    try:
      docs += dataIndex[words[i]]
    except:
      print('Aucun résulats pour la requete: {}'.format(words[i]))
  return docs, len(docs)

dataRes, count = filterByRequest(request)
print('Il y a {} résultats'.format(count))
for i in getBooksByListOfIds(dataRes): 
  print(i['title'])

# classer les resultats de la requete par nombre de téléchargements du plus grand au plus petit
for i in getBooksByListOfIds(dataRes): 
  print(i.sort_values(by=['download_count'],ascending=False))

# pour voir les 20 premiere livres le plus téléchargés
print(data.sort_values(by=['download_count'],ascending=False)[:20])